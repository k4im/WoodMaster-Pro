// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// Begin Region     ---- Models

// Begin Region     ---- Administradores
model Administradores {
  Uuid              String?  @unique() @default(uuid())
  Id                Int     @default(autoincrement()) @id
  Nome              String
  Email             String @unique()
  Senha             String
  Inativo           Boolean @default(false)
  
  Role              Role @relation(fields: [RoleId], references: [Id])
  RoleId            Int 

  dataCriacao       DateTime? @default(now())
  dataUpdate        DateTime? @updatedAt()
  dataRemocao       DateTime? @db.Timestamp()

  @@index([Uuid, Email, Inativo, Nome])
}
// End Region     ---- Administradores

// Begin region     ---- Tenant
model Tenant {
  Uuid              String?  @unique() @default(uuid())
  Id                Int     @default(autoincrement()) @id
  Nome              String?
  Inativo           Boolean @default(false)

  dataCriacao       DateTime? @default(now())
  dataUpdate        DateTime? @updatedAt()
  dataRemocao       DateTime? @db.Timestamp()

  Usuarios          Usuario[]
  Pessoas           Pessoa[]
  Estoque           Estoque?
  Servicos          Servicos[]

  @@index([Uuid, Inativo])
}
// End region     ---- Tenant


// Begin region     ---- Usuario
model Usuario {
  Uuid            String? @unique() @default(uuid())
  Id              Int    @default(autoincrement()) @id
  Nome            String? 
  Email           String @unique()  
  Inativo         Boolean @default(false)
  Senha           String

  Tenant          Tenant @relation(fields: [TenantId], references: [Uuid])
  TenantId        String
  Role            Role  @relation(fields: [RoleId], references: [Uuid])
  RoleId          String
  Pessoa          Pessoa @relation(fields: [PessoaId], references: [Id])
  PessoaId        Int @unique()

  dataCriacao     DateTime? @default(now())
  dataUpdate      DateTime? @updatedAt()
  dataRemocao     DateTime? @db.Timestamp()

  @@index([Uuid, Email, Inativo, TenantId, PessoaId, RoleId])

}

model Role { 
  Uuid            String? @unique() @default(uuid())
  Id              Int    @default(autoincrement()) @id
  Nome            String
  Permissoes      Permissoes[]
  Usuario         Usuario[] 
  Administrador   Administradores[]


  DataCriacao     DateTime  @default(now())
  DataAtualizacao DateTime? @updatedAt()
  DataDeRemocao   DateTime? @db.Timestamp()


  @@index([Uuid])
}

model Permissoes {
  Uuid            String? @unique() @default(uuid())
  Id              Int    @default(autoincrement()) @id
  Role            Role []
  Acao            String
  Subject         String
  
  DataCriacao     DateTime  @default(now())
  DataAtualizacao DateTime? @updatedAt()
  DataDeRemocao   DateTime? @db.Timestamp()

  @@index([Uuid, Acao])
}
// End region     ----  Usuario


// Begin region     ---- Pessoa
model Pessoa {
  Uuid              String?   @unique() @default(uuid())
  Id                Int     @default(autoincrement()) @id
  Nome              String?
  Apelido           String?
  Matricula         String?
  Codigo            Int? 
  Inativo           Boolean?  @default(false)
  Estrangeiro       Boolean? @default(false)
  Email             String? 
  Cliente           Boolean?
  Colaborador       Boolean?
  Fornecedor        Boolean?
  Tipopj            Boolean?
  Datanascimento    DateTime?
  
  PessoaEndereco    PessoaEnderecos[]
  PessoaTelefones   PessoaTelefones[]

  Estadocivil       String?    // Alterei para string pois a tabela ESTADOCIVIL não está definida
  Pai               String?
  Mae               String?
  Sexo              String?    // Alterei para string pois a tabela SEXO não está definida
  Rg                String?
  Emissor           String?
  Ufemissor         String?   // Alterei para string pois a tabela UFEMISSOR não está definida
  Datarg            DateTime?
  Cpf               String?
  Ctps              String?
  Datactps          DateTime?
  Nrpis             String?
  Datapis           DateTime?
  Regprofnumero     String?
  Conselho          String?    // Alterei para string pois a tabela CONSELHO não está definida
  Ufconselho        String?    // Alterei para string pois a tabela UFCONSELHO não está definida
  Regprofserie      String?
  Profissao         String?    // Alterei para string pois a tabela PROFISSAO não está definida
  Dependentes       Int?
  Razaosocial       String?
  Cnpj              String?
  Inscricaoestadual String?
  Inscricaomunicipal String?
  Objetosocial      String?    // Alterei para string, removendo espaço e caracteres especiais
  Observacoes       String?
  
  Tenant            Tenant @relation(fields: [TenantId], references: [Uuid]) 
  TenantId          String 

  Usuario           Usuario?
  Servicos          Servicos[]

  dataCriacao       DateTime? @default(now())
  dataUpdate        DateTime? @updatedAt()
  dataRemocao       DateTime? @db.Timestamp()
  
  @@index([Uuid, TenantId, Cliente, Fornecedor, Colaborador, Inativo, Matricula, Codigo, Tipopj, Email])
}
// Begin region     ---- Pessoa


// Begin region     ---- Endereços
model PessoaEnderecos {
  Id                  Int      @default(autoincrement()) @id
  Pessoa              Pessoa   @relation(fields: [PessoaId], references: [Id], onDelete: Cascade, onUpdate: Cascade)    // Alterei para string pois a tabela PESSOA não está definida
  PessoaId            Int    // Alterei para string pois a tabela PESSOA não está definida
  Logradouro          String?
  Complemento         String?
  Bairro              String?
  Caixapostal         String?
  Pais                String?    // Alterei para string pois a tabela PAIS não está definida
  Estado              String?    // Alterei para string pois a tabela ESTADO não está definida
  Municipio           String?    // Alterei para string pois a tabela MUNICIPIO não está definida
  Cep                 String?
  Enderecoprincipal   Boolean
  Observacoes         String?

  dataCriacao         DateTime? @default(now())
  dataUpdate          DateTime? @updatedAt()
  dataRemocao         DateTime? @db.Timestamp()

  @@index([PessoaId])
}
// Ed region     ---- Endereço

// Begin region     ---- Telefone
model PessoaTelefones {
  Id                  Int    @default(autoincrement())  @id
  Pessoa              Pessoa @relation(fields: [PessoaId], references: [Id], onDelete: Cascade, onUpdate: Cascade)
  PessoaId            Int    
  Telefone            String?
  Ddi                 String?
  Ddd                 String?
  Ramal               String?
  Telefonoprincipal   Boolean?
  Observacoes         String?

  dataCriacao         DateTime? @default(now())
  dataUpdate          DateTime? @updatedAt()
  dataRemocao         DateTime? @db.Timestamp()

  @@index([PessoaId])
}
// End region     ---- Telefone

// Begin region     ---- Estoque
model Estoque {
  Uuid              String? @unique() @default(uuid())
  Id                Int    @default(autoincrement()) @id
  Tenant            Tenant @relation(fields: [TenantId], references: [Uuid])
  TenantId          String   @unique()
  Produtos          Produtos[]

  dataCriacao       DateTime? @default(now())
  dataUpdate        DateTime? @updatedAt()
  dataRemocao       DateTime? @db.Timestamp()

  @@index([TenantId, Uuid])
}

model Produtos {
  Uuid              String? @unique() @default(uuid())
  Id                Int    @default(autoincrement()) @id
  Estoque           Estoque @relation(fields: [EstoqueId], references: [Id])
  EstoqueId         Int
  Servico           Servicos[]
  

  Nome              String?
  Quantidade        Int
  Descricao         String?
  Parteleira        String?
  Coluna            String?
  Valor             Decimal
  

  dataCriacao       DateTime? @default(now())
  dataUpdate        DateTime? @updatedAt()
  dataRemocao       DateTime? @db.Timestamp()

  @@index([EstoqueId, Uuid])
}
// End region     ---- Estoque

// Begin region   ---- Serviço
model Servicos {
  Uuid              String? @unique() @default(uuid())
  Id                Int    @default(autoincrement()) @id
  Tenant            Tenant @relation(fields: [TenantId], references: [Uuid])
  TenantId          String @unique()
  Pessoa            Pessoa @relation(fields: [PessoaId], references: [Id])
  PessoaId          Int
  ProdutosUtilizados Produtos[]

  TipoServico       String?
  DataDeEntrega     DateTime?
  Descricao         String?
  Valor             Decimal
  Desconto          Decimal?

  dataCriacao       DateTime? @default(now())
  dataUpdate        DateTime? @updatedAt()
  dataRemocao       DateTime? @db.Timestamp()

  @@index([Uuid, TenantId, PessoaId])
}
// End region   ---- Serviço

